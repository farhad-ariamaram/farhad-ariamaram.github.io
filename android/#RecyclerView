# RecyclerView

    first we need to implements RecyclerView in gradle
        implementation 'com.android.support:recyclerview-v7:28.0.0'

    make a layout for items in list and bind it in Item Holder inner class
    - ViewHolder
        private class CrimeHolder extends RecyclerView.ViewHolder { 

            private Crime mCrime;
            private TextView mTitleTextView; 
            private TextView mDateTextView;

            public CrimeHolder(LayoutInflater inflater, ViewGroup parent) { 
                super(inflater.inflate(R.layout.list_item_crime, parent, false)); 
                mTitleTextView = (TextView) itemView.findViewById(R.id.crime_title); 
                mDateTextView = (TextView) itemView.findViewById(R.id.crime_date);
            } 

            public void bind(Crime crime) { 
                mCrime = crime; 
                mTitleTextView.setText(mCrime.getTitle()); 
                mDateTextView.setText(mCrime.getDate().toString()); 

                //set listeners here if need
            }
        }

    then we need a adapter as inner class
    - Adapter
        create ViewHolder as an inner class
        private class CrimeAdapter extends RecyclerView.Adapter<CrimeHolder> {

            private List<Crime> mCrimes;

            public CrimeAdapter(List<Crime> crimes) { mCrimes = crimes; } 

            @Override
            public CrimeHolder onCreateViewHolder(ViewGroup parent, int viewType) { 
                LayoutInflater layoutInflater = LayoutInflater.from(getActivity());
                return new CrimeHolder(layoutInflater, parent); 
            }

            @Override
            public void onBindViewHolder(CrimeHolder holder, int position) {
                Crime crime = mCrimes.get(position); 
                holder.bind(crime);
            }

            @Override
            public int getItemCount() { return mCrimes.size(); }
        }

    then add recycler view in layout and use following code
        //fragment or activity class level
        private RecyclerView mCrimeRecyclerView; 
        private CrimeAdapter mAdapter;
        
        //OnCreate() or OnCreateView()
        mCrimeRecyclerView = (RecyclerView) view.findViewById(R.id.crime_recycler_view);
        mCrimeRecyclerView.setLayoutManager(new LinearLayoutManager(getActivity()));
        updateUI();

        //updateUI() method in activity or fragment class
        private void updateUI() { 
            CrimeLab crimeLab = CrimeLab.get(getActivity()); 
            List<Crime> crimes = crimeLab.getCrimes();
            mAdapter = new CrimeAdapter(crimes); 
            mCrimeRecyclerView.setAdapter(mAdapter); 
        }

    - Update RecyclerView List
        every time we back from one activity that changed data to list for apply changes on list we should
        notify RecyclerView about this changes, for that we use onResume() (activity or fragment)

        @Override 
        public void onResume() { 
            super.onResume(); 
            updateUI(); 
        }

        and change updateUI() like below

        private void updateUI() { 
            CrimeLab crimeLab = CrimeLab.get(getActivity());     
            List<Crime> crimes = crimeLab.getCrimes();
            if (mAdapter == null) { 
                mAdapter = new CrimeAdapter(crimes); 
                mCrimeRecyclerView.setAdapter(mAdapter); 
            } else { 
                mAdapter.notifyDataSetChanged(); 
            } 
        }

        note: notifyItemChanged(int) will use when one or some fields are changed 
            and more efficient than notifyItemChanged() (without position id).